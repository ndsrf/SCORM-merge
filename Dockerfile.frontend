# Frontend Dockerfile for SCORM Package Merger
# Multi-stage build for optimized production image

# Stage 1: Build the React application
FROM node:18-alpine AS build

WORKDIR /app

# Copy package files for the client
COPY client/package.json client/package-lock.json ./

# Install dependencies
RUN npm install && npm cache clean --force

# Copy client source code
COPY client/ ./

# Build the React app
RUN npm run build

# Stage 2: Serve with nginx
FROM nginx:alpine

# Copy built React app to nginx html directory
COPY --from=build /app/build /usr/share/nginx/html

# Copy custom nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Expose port 80
EXPOSE 80

# Health check for nginx
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]