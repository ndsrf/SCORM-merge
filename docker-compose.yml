version: '3.8'

services:
  # Backend Node.js API server
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: scorm-merger-backend
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
    volumes:
      # Persistent storage for uploaded files and temp files
      - backend_uploads:/app/uploads
      - backend_temp:/app/temp
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - scorm-network

  # Frontend React app served by nginx
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: scorm-merger-frontend
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - scorm-network

# Named volumes for data persistence
volumes:
  backend_uploads:
    driver: local
  backend_temp:
    driver: local

# Custom network for container communication
networks:
  scorm-network:
    driver: bridge